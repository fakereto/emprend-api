{
  "openapi": "3.0.0",
  "info": {
    "title": "User Api",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:8000"
    }
  ],
  "paths": {
    "/api/user/": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user data profile",
        "description": "",
        "responses": {
          "200": {
            "description": "successful login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "The given data was invalid."
          }
        }
      }
    },
    "/api/user/comments": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get comments for user logged in",
        "description": "",
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentCollection"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          }
        }
      }
    },
    "/api/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Logs user into the emprenDApp",
        "description": "",
        "operationId": "loginUser",
        "requestBody": {
          "description": "User data for login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "email": {
                    "description": "email user",
                    "type": "string",
                    "maxLength": 255
                  },
                  "password": {
                    "description": "Password for login",
                    "type": "string",
                    "minLength": 8
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "The given data was invalid."
          }
        }
      }
    },
    "/api/logout": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Logout user",
        "description": "Logout user",
        "operationId": "logoutUser",
        "security": [
          {
            "bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "User logged out."
          },
          "403": {
            "description": "User token invalid"
          }
        }
      }
    },
    "/api/register": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "User Register",
        "description": "User Register for access to secure app",
        "operationId": "RegisterUser",
        "requestBody": {
          "description": "User data for login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "description": "Name of user",
                    "type": "string",
                    "maxLength": 255
                  },
                  "email": {
                    "description": "email user",
                    "type": "string",
                    "maxLength": 255
                  },
                  "password": {
                    "description": "Password for login",
                    "type": "string",
                    "minLength": 8
                  },
                  "password_confirmation": {
                    "description": "Password for login",
                    "type": "string",
                    "minLength": 8
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A JSON array of user data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "description": "User not found or unahutorized"
          }
        }
      }
    },
    "/api/comments": {
      "get": {
        "tags": [
          "comments"
        ],
        "summary": "Get comments",
        "description": "Get all apps comment registered paginated",
        "operationId": "getComments",
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentCollectionPagination"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          }
        }
      },
      "post": {
        "tags": [
          "comments"
        ],
        "summary": "Add new comment",
        "description": "Add new commet to app",
        "operationId": "addComment",
        "requestBody": {
          "description": "Comment Daa",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "body": {
                    "description": "body of the comment",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          }
        }
      }
    },
    "/api/comments/{id}": {
      "get": {
        "tags": [
          "comments"
        ],
        "summary": "Get Comment",
        "description": "Get comment object by id",
        "operationId": "getComment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Comment Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          }
        }
      },
      "put": {
        "tags": [
          "comments"
        ],
        "summary": "Update comment",
        "description": "Update the comment with id",
        "operationId": "updateComment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Comment Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Comment Daa",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "body": {
                    "description": "body of the comment",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "404": {
            "description": "Resource comment not found."
          }
        }
      },
      "delete": {
        "tags": [
          "comments"
        ],
        "summary": "Update comment",
        "description": "Update the comment with id",
        "operationId": "deleteComment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Comment Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "401": {
            "description": "Unauthorized."
          },
          "404": {
            "description": "Resource comment not found."
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "token"
      }
    },
    "schemas": {
      "User": {
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "email": {
            "type": "string",
            "maxLength": 255
          },
          "password": {
            "type": "string",
            "minLength": 8
          },
          "api_token": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "User"
        }
      },
      "Comment": {
        "required": [
          "body"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "body": {
            "type": "string"
          },
          "user_id": {
            "type": "integer"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "Comment"
        }
      },
      "CommentCollection": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Comment"
            }
          }
        },
        "xml": {
          "name": "CommentCollection"
        }
      },
      "LinksPagination": {
        "properties": {
          "first": {
            "type": "string",
            "description": "reference to first page of pagination"
          },
          "last": {
            "type": "string",
            "description": "reference to last page of pagination"
          },
          "prev": {
            "type": "string",
            "description": "reference to previous page of pagination"
          },
          "next": {
            "type": "string",
            "description": "reference to next page of pagination"
          }
        }
      },
      "MetaPagination": {
        "properties": {
          "current_page": {
            "type": "integer",
            "description": "Current page of pagination data"
          },
          "from": {
            "type": "integer",
            "description": "from init registry number returned"
          },
          "last_page": {
            "type": "integer",
            "description": "last page for pagination"
          },
          "path": {
            "type": "string",
            "description": "path of resource pagination returned"
          },
          "per_page": {
            "type": "integer",
            "description": "number of items returned"
          },
          "to": {
            "type": "integer",
            "description": "number of registry data returned"
          },
          "total": {
            "type": "integer",
            "description": "total of registries on pagination"
          }
        }
      },
      "CommentCollectionPagination": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommentCollection"
            }
          },
          "links": {
            "$ref": "#/components/schemas/LinksPagination"
          },
          "meta": {
            "$ref": "#/components/schemas/MetaPagination"
          }
        },
        "xml": {
          "name": "CommentCollectionPagination"
        }
      }
    }
  }
}