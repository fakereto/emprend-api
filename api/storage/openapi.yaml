openapi: 3.0.0
info:
  title: User Api
  version: '1.0'
servers:
  - url: 'http://localhost:8000'
paths:
  /user/:
    get:
      tags: 
        - user
      summary: Get user data profile
      description: ''
      responses:
        '200':
          description: successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: The given data was invalid.
  /user/comments:
    get:
      tags: 
        - user
      summary: Get comments for user logged in
      description: ''
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '401':
          description: Unauthorized.
  /api/login:
    post:
      tags:
        - user
      summary: Logs user into the emprenDApp
      description: ''
      operationId: loginUser
      requestBody:
        description: User data for login
        required: true
        content:
          application/json:
            schema:
              properties:
                email:
                  description: email user
                  type: string
                  maxLength: 255
                password:
                  description: Password for login
                  type: string
                  minLength: 8
              type: object
      responses:
        '200':
          description: successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: The given data was invalid.
  /api/logout:
    post:
      tags:
        - user
      summary: Logout user
      description: Logout user
      operationId: logoutUser
      security:
        - bearer: []
      responses:
        '200':
          description: User logged out.
        '403':
          description: User token invalid
  /api/register:
    post:
      tags:
        - user
      summary: User Register
      description: User Register for access to secure app
      operationId: RegisterUser
      requestBody:
        description: User data for login
        required: true
        content:
            application/json:
              schema:
                properties:
                  name:
                    description: Name of user
                    type: string
                    maxLength: 255
                  email:
                    description: email user
                    type: string
                    maxLength: 255
                  password:
                    description: Password for login
                    type: string
                    minLength: 8
                  password_confirmation:
                    description: Password for login
                    type: string
                    minLength: 8
                type: object
      responses:
        '200':
          description: A JSON array of user data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: User not found or unahutorized
  /api/comments:
    get:
      tags:
        - comments
      summary: Get comments
      description: Get all apps comment registered
      operationId: getComments
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '401':
          description: Unauthorized.
    post:
      tags:
        - comments
      summary: Add new comment
      description: Add new commet to app
      operationId: addComment
      requestBody:
        description: Comment Daa
        required: true
        content:
          application/json:
            schema:
              properties:
                body:
                  description: body of the comment
                  type: string
              type: object
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '401':
          description: Unauthorized.
  /api/comments/{id}:
    put:
      tags:
        - comments
      summary: Update comment
      description: Update the comment with id
      operationId: updateComment
      parameters:
        - name: id
          in: path
          description: Comment Id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Comment Daa
        required: true
        content:
          application/json:
            schema:
              properties:
                body:
                  description: body of the comment
                  type: string
              type: object
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '401':
          description: Unauthorized.
    delete:
      tags:
        - comments
      summary: Update comment
      description: Update the comment with id
      operationId: deleteComment
      parameters:
        - name: id
          in: path
          description: Comment Id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful
        '401':
          description: Unauthorized.
        '404':
          description: Resource not found.
components:
  securitySchemes:
    bearer:            #name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: token    # optional, arbitrary value for documentation purposes
  schemas:
    User:
      required:
        - email
        - password
      properties:
        name:
          type: string
          maxLength: 255
        email:
          type: string
          maxLength: 255
        password:
          type: string
          minLength: 8
        api_token:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
      type: object
      xml:
        name: User
    Comment:
      required:
        - body
      properties:
        body:
          type: string
        updated_at:
          type: string
        created_at:
          type: string
        id: 
          type: integer
      type: object
      xml:
        name: Comment